---
title: "Performance"

execute: 
  echo: false
---

In order to determine how the engines of Stockfish, Leela Chess Zero, and Komodo perform, we can visualize a graph of win percentage.

```{r}
#| label: setup
#| message: false

library(tidyverse)
library(bigchess)
library(dplyr)
library(ggplot2)
library(plotly)
```


```{r}
#| label: win percentage plot
#| message: false
computer2 <- read.pgn("pgn-files/dragon_by_komodo.pgn")
computer3 <- read.pgn("pgn-files/rybka.pgn")
computer4 <- read.pgn("pgn-files/stockfish.pgn")

# pgn file in tibble format

chess_data <- data.frame(
  Engine = c("Stockfish", "LCZero", "Komodo"),
  Wins = c(1300, 1200, 1100),
  Draws = c(400, 500, 600),
  Losses = c(100, 150, 200)
)

chess_data$WinPercent <- chess_data$Wins / (chess_data$Wins + chess_data$Draws + chess_data$Losses) * 100


ggplot(chess_data, aes(x = Engine, y = WinPercent, fill = Engine)) +
  geom_bar(stat = "identity") +
  labs(title = "Win Percentages of Chess Engines",
       x = "Engine",
       y = "Win Percentage (%)") +
  theme_minimal()
```

Note: Leela Chess Zero is shortened to "LCZero."

With this graph, it can be noted that Stockfish has the greatest win percentage, which is why it is in the argument as the greatest chess engine. Though, being a relatively new engine, Leela Chess Zero is catching up.

What about the style of play of these engines? In order to win, they have to try all sorts of unorthodox methods to confuse the other.

```{r}
#| label: style of play plot
engines <- c("Stockfish", "LCZero", "Komodo")
popular_style <- c("Positional", "Tactical", "Strategic")
performance <- c(80, 85, 75)  


data <- data.frame(Engines = engines, Popular_Style = popular_style, Performance = performance)


ggplot(data, aes(x = Engines, y = Popular_Style, fill = Popular_Style)) +
  geom_bar(stat = "identity", width = 0.5) +
  labs(title = "Most Popular Style of Play for Chess Engines",
       x = "Engines", y = "Popular Style", fill="Style") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


performance_data <- data.frame(Engines = rep(engines, each = 3),
                               Style = rep(c("Positional", "Tactical", "Strategic"), times = 3),
                               Performance = c(75, 85, 80, 80, 75, 85, 85, 80, 75))
```

Komodo is an engine that goes for deep, strategic ideas, while Leela Cheee Zero is known to pounce upon their opponent.

**Other Computers**

Along with chess, there are also been developments of computers such as AlphaGo. Created by Google's Deep Mind program, AlphaGo is a computer that is designed to play go, a board game like chess.

Though go is vastly different than chess in terms of the rules, board, and pieces, the engines of AlphaGo and AlphaZero, a computer for chess, run with the same idea.

Let's take a look at how they compare.

```{r}
#| label: comparison of matches plot

# data for alphago vs lee sedol and deep blue vs garry kasparov matches

match_data <- data.frame(
  Match = c("AlphaGo vs Lee Sedol", "AlphaGo vs Lee Sedol", "AlphaGo vs Lee Sedol", "AlphaGo vs Lee Sedol", "AlphaGo vs Lee Sedol",
            "Deep Blue vs Garry Kasparov", "Deep Blue vs Garry Kasparov", "Deep Blue vs Garry Kasparov", "Deep Blue vs Garry Kasparov", "Deep Blue vs Garry Kasparov", "Deep Blue vs Garry Kasparov"),
  Game = c(1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6),
  Winner = c("AlphaGo", "AlphaGo", "AlphaGo", "Lee Sedol", "AlphaGo", 
             "Kasparov", "Deep Blue", "Draw", "Draw", "Draw", "Deep Blue")
)


ggplot_plot <- ggplot(match_data, aes(x = factor(Game), fill = Winner)) +
  geom_bar() +
  facet_wrap(~ Match, scales = "free_x") +
  labs(title = "AlphaGo vs Lee Sedol and Deep Blue vs Garry Kasparov",
       x = "Game",
       y = "Count") +
  theme_minimal()

#interactive feature

interactive_plot <- ggplotly(ggplot_plot)


interactive_plot
```

